#!/usr/bin/env python

from __future__ import print_function
import os.path
import sys
import subprocess

# Each row is of the form (path, requires_sudo)
PKG_MGRS = [
    {'path': '/usr/bin/apt-get',    'sudo': True},
    {'path': '/usr/local/bin/brew', 'sudo': False}
]

def main():
    pkg_mgr = get_pkg_mgr()
    sudo_part = ['sudo'] if pkg_mgr['sudo'] else []
    subprocess.call(sudo_part + [pkg_mgr['path']] + sys.argv[1:])

def get_pkg_mgr():
    """
    Returns the first package manager found on the system, or exits.
    The returned value is an entry from the PKG_MGRS list.
    """
    mgrs = [p for p in PKG_MGRS if os.path.isfile(p['path'])]
    if mgrs:
        return mgrs[0]
    else:
        print('No supported package manager found. Expected one of', 
              ', '.join([p['path'] for p in PKG_MGRS]))
        sys.exit(1)

if __name__ == '__main__': 
    main()

